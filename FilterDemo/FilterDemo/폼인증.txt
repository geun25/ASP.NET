폼 인증을 사용하기 위해서는 System.Web.Security.FormsAuthentication 클래스를 이용한다.

이 클래스의 Authenticate, SetAuthCookie 메소드를 호출해야 한다.

~ Authenticate : 사용자가 입력한 자격 증명의 유효성을 검증한다.
~ SetAuthCookie : 브라우저에 보내는 Response에 쿠키를 추가해서 사용자가 매번
					Request를 할 때마다 다시 인증을 받을 필요가 없도록 해준다.


[MVC 프레임워크 필터 형식]
-인증 필터(Authentication) : 가장 먼저 실행되는 필터(다른 필터나 액션 메소드가 실행되기 전에 실행)
namespace System.Web.Mvc {
	public interface IAuthenticationFilter{
		void OnAuthentication(AuthenticationContext context); - 인증검사 수행(다른 종류 필터 실행 전에 호출)
		void OnAuthenticationChallenge(AuthenticationChallengeContext context); - 인증 및 권한부여 정책에 맞지 않을때 수행
	}
}

AuthenticationContext 클래스에 정의된 속성
-ActionDescriptor : 필터가 적용된 액션 메소드를 설명하는 ActionDescriptor를 반환 
-Result : 인증 결과를 나타내는 ActionResult를 설정
-Principal : 사용자가 이미 인증되었다면, 현재 사용자를 식별하는 IPrincipal 인터페이스의 구현을 반환

AuthenticationChallengeContext에 정의된 속성
-ActionDescriptor : 필터가 적용된 액션 메소드를 설명하는 ActionDescriptor를 반환 
-Result : 인증 시도의 결과를 나타내는 ActionResult를 설정


-권한 부여 필터(Authorization) : 인증 필터가 실행된 후에 다른 필터들이나 액션 메서드가 실행 되기 전에 실행
오직 인증된 사용자에 의해서만 호출될 수 있도록 권한 부여를 제어하는 필터

namespace System.Web.Mvc{
	public interface IAuthorizationFilter{
		void OnAuthorization(AuthorizationContext filterContext);
	}
}

-액션 필터(Action) : 액션 메소드가 실행 되기 전이나 실행 후에 실행
-결과 필터(Result) : 액션 결과가 실행 되기 전이나 후에 실행
-예외 필터(Exception) : 다른 필터나 액션 메소드, 액션 결과가 예외를 던지는 경우에만 실행

[AuthorizeAttribute 클래스]
-public 속성
	: Users - string형식 - 사용자들의 이름 목록
	: Roles - string형식 - 역할의 이름 목록
